---
title: "Biostat 203B Homework 3"
subtitle: "Due Feb 21 @ 11:59PM"
author: "Yanzi Sun 106183069"
format:
  html:
    theme: cosmo
    embed-resources: true
    number-sections: false
    toc: true
    toc-depth: 4
    toc-location: left
    code-fold: false
---

Display machine information for reproducibility:
```{r}
sessionInfo()
```

Load necessary libraries (you can add more as needed).
```{r setup}
library(arrow)
library(gtsummary)
library(memuse)
library(pryr)
library(R.utils)
library(tidyverse)
library(ggplot2)
```

Display your machine memory.
```{r}
memuse::Sys.meminfo()
```

In this exercise, we use tidyverse (ggplot2, dplyr, etc) to explore the [MIMIC-IV](https://physionet.org/content/mimiciv/3.1/) data introduced in [homework 1](https://ucla-biostat-203b.github.io/2025winter/hw/hw1/hw1.html) and to build a cohort of ICU stays.

## Q1. Visualizing patient trajectory

Visualizing a patient's encounters in a health care system is a common task in clinical data analysis. In this question, we will visualize a patient's ADT (admission-discharge-transfer) history and ICU vitals in the MIMIC-IV data.

### Q1.1 ADT history

A patient's ADT history records the time of admission, discharge, and transfer in the hospital. This figure shows the ADT history of the patient with `subject_id` 10001217 in the MIMIC-IV data. The x-axis is the calendar time, and the y-axis is the type of event (ADT, lab, procedure). The color of the line segment represents the care unit. The size of the line segment represents whether the care unit is an ICU/CCU. The crosses represent lab events, and the shape of the dots represents the type of procedure. The title of the figure shows the patient's demographic information and the subtitle shows top 3 diagnoses.

![](10001217_adt.png)
Do a similar visualization for the patient with `subject_id` 10063848 using ggplot.

Hint: We need to pull information from data files `patients.csv.gz`, `admissions.csv.gz`, `transfers.csv.gz`, `labevents.csv.gz`, `procedures_icd.csv.gz`, `diagnoses_icd.csv.gz`, `d_icd_procedures.csv.gz`, and `d_icd_diagnoses.csv.gz`. For the big file `labevents.csv.gz`, use the Parquet format you generated in Homework 2. For reproducibility, make the Parquet folder `labevents_pq` available at the current working directory `hw3`, for example, by a symbolic link. Make your code reproducible.

```{r}
#use semi-join to filter & merge rows
labevents_pq <- arrow::open_dataset("labevents_parquet",
                                         format = "parquet") %>%
              filter(subject_id == 10063848) %>%
              collect()
labevents_pq 
```

```{r}
#pulled data from&creating subjects patients_df, `admissions.csv.gz`, `transfers.csv.gz`, `labevents.csv.gz`, `procedures_icd.csv.gz`, `diagnoses_icd.csv.gz`, `d_icd_procedures.csv.gz`, and `d_icd_diagnoses.csv.gz`.

patients_df <- read_csv("~/mimic/hosp/patients.csv.gz") |>
              filter(subject_id == 10063848) %>%
              collect()
admissions_df <- read_csv("~/mimic/hosp/admissions.csv.gz") |>
              filter(subject_id == 10063848) %>%
              collect()
transfers_df <- read_csv("~/mimic/hosp/transfers.csv.gz") |>
              filter(subject_id == 10063848) %>%
              collect()
procedures_icd_df <- read_csv("~/mimic/hosp/procedures_icd.csv.gz") |>
              filter(subject_id == 10063848) %>%
              collect()
diagnoses_icd_df <- read_csv("~/mimic/hosp/diagnoses_icd.csv.gz") |>
              filter(subject_id == 10063848) %>%
              collect()
d_icd_procedures_df <- read_csv("~/mimic/hosp/d_icd_procedures.csv.gz")
d_icd_diagnoses_df <- read_csv("~/mimic/hosp/d_icd_diagnoses.csv.gz")
```


```{r}
# Load necessary libraries
library(tidyverse)
library(lubridate)

# Convert date columns to Date format
transfers_data <- transfers_df %>%
  mutate(intime = as.Date(intime), outtime = as.Date(outtime))

lab_data <- labevents_pq %>%
  mutate(charttime = as.Date(charttime))

procedure_data <- procedures_icd_df %>%
  mutate(chartdate = as.Date(chartdate))

diagnoses_translated <- diagnoses_icd_df %>%
  left_join(d_icd_diagnoses_df, by = "icd_code") %>%
  filter(icd_version.y=="10") %>%
  top_n(3, wt = seq_num)  # Select top 3 diagnoses

# Convert to a readable format
diagnoses_text <- paste(diagnoses_translated$long_title, 
                        collapse = ", ")

# Merge procedures with descriptions
procedures_translated <- procedure_data %>%
  left_join(d_icd_procedures_df, by = "icd_code")

# Ensure procedure titles are available
procedure_data <- procedure_data %>%
  left_join(d_icd_procedures_df, by = "icd_code") 

# Create ggplot visualization
ggplot() +
  # Plot Transfers (Care Units) as segments
  geom_segment(data = transfers_data, 
               aes(x = intime, xend = outtime, 
                   y = "ADT", yend = "ADT", color = careunit),
               size = 3) +
  
  # Plot Lab Events as points
  geom_point(data = lab_data, 
             aes(x = charttime, y = "Lab"), 
             shape = 3, size = 2) +
  
  # Plot Procedures as points with different shapes
  geom_point(data = procedure_data, 
             aes(x = chartdate, y = "Procedure", shape = long_title), 
             size = 3, fill = "black") +
  
  # Formatting
  labs(
    title = paste0("Patient ", patients_df$subject_id,
                   ", ", patients_df$gender, ", ", 
                   patients_df$anchor_age, " years old, ",
                   admissions_df$race),
    subtitle = paste("Diagnoses:", 
                     paste(diagnoses_text, collapse="\n")),
    x = "Calendar Time", y = "Type of Event",
    color = "Care Unit",
    shape = "Procedure"
  ) +
  scale_x_date(date_labels = "%b %d") +
  theme_minimal(base_size=8) 
```

### Q1.2 ICU stays

ICU stays are a subset of ADT history. This figure shows the vitals of the patient `10001217` during ICU stays. The x-axis is the calendar time, and the y-axis is the value of the vital. The color of the line represents the type of vital. The facet grid shows the abbreviation of the vital and the stay ID.

![](10001217_icu.png)

Do a similar visualization for the patient `10063848`.
```{r}
#ingest all icu data
chartevents_pq <- arrow::open_dataset("chartevents_parquet",
                                         format = "parquet") |>
              filter(subject_id == 10063848,
                     itemid %in% c(220045, 220179, 223761, 220210)) |>
              collect()
d_items_df <- read_csv("~/mimic/icu/d_items.csv.gz") |>
            select(itemid, abbreviation) 
icu_all <- chartevents_pq |>
          left_join(y=d_items_df, by="itemid") |>
          select(subject_id, stay_id, charttime,
                 itemid, valuenum, abbreviation)


```
```{r}
#I consulted with Bowen on this question and he said my computer may read time differently so the second stay could show a different time period.
ggplot(icu_all, aes(x = charttime, y = valuenum, color = abbreviation )) +
  geom_line() + 
  geom_point() + 
  facet_grid(abbreviation ~ stay_id, scales = "free") + 
  scale_x_datetime() +

  # Formatting
  labs(
    title = paste("Patient", "10063848", "ICU stays - Vitals"),
    x = "Calendar Time", 
    y = "Vital Value",
    color = "Vital Sign"
  ) +
  
  # Improve theme aesthetics
  theme_minimal() 
```


```{r}
graphics.off()  # Closes all open plots
rm(list = ls()) # Clears all objects in the environment
gc()            # Runs garbage collection
```



## Q2. ICU stays

`icustays.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/icustays/>) contains data about Intensive Care Units (ICU) stays. The first 10 lines are
```{bash}
zcat < ~/mimic/icu/icustays.csv.gz | head
```

### Q2.1 Ingestion

Import `icustays.csv.gz` as a tibble `icustays_tble`. 

```{r}
icustays_tble <- read_csv("~/mimic/icu/icustays.csv.gz")
```

### Q2.2 Summary and visualization

How many unique `subject_id`? Can a `subject_id` have multiple ICU stays? Summarize the number of ICU stays per `subject_id` by graphs. 

**Solution:** There are 65366 unique subject_id. Yes, a subject_id can have multiple icu stays as question 1 shows. The graph of #icu stays per subject_id is shown below.
```{r}
icu_stay_counts <- icustays_tble %>%
  group_by(subject_id) %>%
  summarise(num_stays = n())

stay_distribution <- icu_stay_counts %>%
  group_by(num_stays) %>%
  summarise(frequency = n())

# Create bar plot
ggplot(stay_distribution, aes(x = num_stays, y = frequency)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  labs(
    title = "Distribution of ICU Stays per Patient",
    x = "Number of ICU Stays",
    y = "Number of Patients"
  ) +
  theme_minimal()
```

## Q3. `admissions` data

Information of the patients admitted into hospital is available in `admissions.csv.gz`. See <https://mimic.mit.edu/docs/iv/modules/hosp/admissions/> for details of each field in this file. The first 10 lines are
```{bash}
zcat < ~/mimic/hosp/admissions.csv.gz | head
```

### Q3.1 Ingestion

Import `admissions.csv.gz` as a tibble `admissions_tble`.
```{r}
admissions_tble <- read_csv("~/mimic/hosp/admissions.csv.gz")
```

### Q3.2 Summary and visualization

Summarize the following information by graphics and explain any patterns you see.

- number of admissions per patient  
- admission hour (anything unusual?)  
- admission minute (anything unusual?)  
- length of hospital stay (from admission to discharge) (anything unusual?)  

According to the [MIMIC-IV documentation](https://mimic.mit.edu/docs/iv/about/concepts/#date-shifting), 

> All dates in the database have been shifted to protect patient confidentiality. Dates will be internally consistent for the same patient, but randomly distributed in the future. Dates of birth which occur in the present time are not true dates of birth. Furthermore, dates of birth which occur before the year 1900 occur if the patient is older than 89. In these cases, the patientâ€™s age at their first admission has been fixed to 300.

**Solution:** The graphs are plotted below. 

In the number of admission per patient, I observed that most patients have only one admission, but one outlier patient has 40 admissions surprisingly.

In the admission hour summary, the abnormality I found is the admission hour is mostly at 0am, which is the start of a day. I assume it is the default hour when logging admission time into the system.

Similarly in admission minute summary, I see most patients are admitted at 0, 15, 30, 45 minute, which can be due to the convienience to record the admission munite to the closest quarter point.

From the length of stay graph, most patients stay between 1-5 days. The abnormality I found is the distribution looks like a wave, with repeating peaks and troughs.The peaks are the integer hours and the troughs are hours with decimal. I think this is also due to the convienient-time-recording habit doctors have when inputting the time data. 
```{r}
### number of admissions per patient
hosp_admission_counts <- admissions_tble %>%
  group_by(subject_id) %>%
  summarise(num_stays = n())

hosp_admission_distribution <- hosp_admission_counts %>%
  group_by(num_stays) %>%
  summarise(frequency = n())

ggplot(hosp_admission_distribution, aes(x = num_stays, y = frequency)) +
  xlim(0, 50)+
  geom_bar(stat = "identity", fill = "steelblue") +
  labs(
    title = "Distribution of Hospital Admission per Patient",
    x = "Number of Hospital Admission",
    y = "Number of Patients"
  ) +
  theme_minimal()
```

```{r}
### admission hour (anything unusual?) 
admission_hour <- admissions_tble %>%
  mutate(admit_hour = hour(admittime))

admission_hour_distribution <- admission_hour %>%
  group_by(admit_hour) %>%
  summarise(frequency = n())

ggplot(admission_hour_distribution, aes(x = admit_hour, y = frequency)) +
  geom_bar(stat = "identity", fill = "steelblue") +
             labs(title = "Admission Hour Counts",
                  x = "Admission Hour",
                  y = "Number of Patients"
                  ) +
  theme_minimal()
```

```{r}
### admission minute (anything unusual?)  
admission_minute <- admissions_tble %>%
  mutate(admit_minute = minute(admittime))

admission_minute_distribution <- admission_minute %>%
  group_by(admit_minute) %>%
  summarise(frequency = n())

ggplot(admission_minute_distribution, aes(x = admit_minute, y = frequency)) +
  geom_bar(stat = "identity", fill = "steelblue") +
             labs(title = "Admission Minute Counts",
                  x = "Admission Minute",
                  y = "Number of Patients"
                  ) +
  theme_minimal()
```

```{r}
### length of hospital stay (from admission to discharge) (anything unusual?) 
hospital_stay <- admissions_tble |>
      mutate(length_of_stay = as.numeric(difftime(dischtime,
                                                  admittime, 
                                                  units = "days")))

hosp_stay_distribution <- hospital_stay |>
  group_by(length_of_stay) |>
  summarise(frequency = n())

ggplot(hosp_stay_distribution, aes(x = length_of_stay, y = frequency)) +
  xlim(0, 25)+
  geom_bar(stat = "identity", fill = "steelblue") +
             labs(title = "Hospital Stay distribution",
                  x = "Hospital Stay Length",
                  y = "Number of Patients"
                  ) +
  theme_minimal()

```


## Q4. `patients` data

Patient information is available in `patients.csv.gz`. See <https://mimic.mit.edu/docs/iv/modules/hosp/patients/> for details of each field in this file. The first 10 lines are
```{bash}
zcat < ~/mimic/hosp/patients.csv.gz | head
```

### Q4.1 Ingestion

Import `patients.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/patients/>) as a tibble `patients_tble`.

```{r}
patients_tble <- read_csv("~/mimic/hosp/patients.csv.gz")
```

### Q4.2 Summary and visualization

Summarize variables `gender` and `anchor_age` by graphics, and explain any patterns you see.

**Solution:** The summary graphics are drawn below. I see the gender distribution is fairly equal, with female slightly larger in number than male. The anchor age shows most patients are in their 20s and a lot of patients have the anchor age of ~90 yo, which is surprising but can be understandable due to the nature of the anchor age data protecting patients' privacy.

```{r}
### gender 
gender_dist <- patients_tble |>
  group_by(gender) |>
  summarise(frequency = n())

age_dist <- patients_tble |>
  group_by(anchor_age) |>
  summarise(frequency = n())

ggplot(gender_dist, aes(x = gender, y = frequency)) +
  geom_bar(stat = "identity", fill = "steelblue") +
             labs(title = "Patient Gender Distribution",
                  x = "Gender",
                  y = "Number of Patients"
                  ) +
  theme_minimal()

ggplot(age_dist, aes(x = anchor_age, y = frequency)) +
  geom_bar(stat = "identity", fill = "steelblue") +
             labs(title = "Patient Anchor Age Distribution",
                  x = "Anchor Age",
                  y = "Number of Patients"
                  ) +
  theme_minimal()

```


## Q5. Lab results

`labevents.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/labevents/>) contains all laboratory measurements for patients. The first 10 lines are
```{bash}
zcat < ~/mimic/hosp/labevents.csv.gz | head
```

`d_labitems.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/hosp/d_labitems/>) is the dictionary of lab measurements. 
```{bash}
zcat < ~/mimic/hosp/d_labitems.csv.gz | head
```

We are interested in the lab measurements of creatinine (50912), potassium (50971), sodium (50983), chloride (50902), bicarbonate (50882), hematocrit (51221), white blood cell count (51301), and glucose (50931). Retrieve a subset of `labevents.csv.gz` that only containing these items for the patients in `icustays_tble`. Further restrict to the last available measurement (by `storetime`) before the ICU stay. The final `labevents_tble` should have one row per ICU stay and columns for each lab measurement.

![](labevents_tble.png)

Hint: Use the Parquet format you generated in Homework 2. For reproducibility, make `labevents_pq` folder available at the current working directory `hw3`, for example, by a symbolic link. get the most recent lab result of each patients for each icu stay

```{r}
dlabitems_tble <-
  read_csv("~/mimic/hosp/labevents.csv.gz")

```
```{r}
open_dataset("labevents_pq", format = "parquet") |>
  to_duckdb() |>
  select(subject_id, itemid, storetime, valuenum) |>
  filter(itemid %in% dlabitems_tble$itemid) |>
  left_join(
    select(icustays_tble, subject_id, stay_id, intime ),
    by=c("subject_id"),
    copy = TRUE )|>
  filter(storetime < intime) |>
  group_by(subject_id, stay_id, itemid) |>
  slice_max(storetime, n = 1) |>
  select(-storetime, -intime) |>
  ungroup() |>
  pivot_wider(names_from = itemid, values_from = valuenum) |>
  rename_at (
    var(as.character(dlabitems_tble$itemid)),
    ~str_to_lower(dlabitems_tble$label)
  ) |>
  rename(wbc = `white blood cell`) |>
  show_query() |>
  collect() |>
  arrange(subject_id, stay_id) |>
  relocate(subject_id, stay_id, sort(names(.))
  )|>
  print(width = Inf)
```
## Q6. Vitals from charted events

`chartevents.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/chartevents/>) contains all the charted data available for a patient. During their ICU stay, the primary repository of a patientâ€™s information is their electronic chart. The `itemid` variable indicates a single measurement type in the database. The `value` variable is the value measured for `itemid`. The first 10 lines of `chartevents.csv.gz` are
```{bash}
zcat < ~/mimic/icu/chartevents.csv.gz | head
```

`d_items.csv.gz` (<https://mimic.mit.edu/docs/iv/modules/icu/d_items/>) is the dictionary for the `itemid` in `chartevents.csv.gz`. 
```{bash}
zcat < ~/mimic/icu/d_items.csv.gz | head
```

We are interested in the vitals for ICU patients: heart rate (220045), systolic non-invasive blood pressure (220179), diastolic non-invasive blood pressure (220180), body temperature in Fahrenheit (223761), and respiratory rate (220210). Retrieve a subset of `chartevents.csv.gz` only containing these items for the patients in `icustays_tble`. Further restrict to the first vital measurement within the ICU stay. The final `chartevents_tble` should have one row per ICU stay and columns for each vital measurement. 

![](chartevents_tble.png)

Hint: Use the Parquet format you generated in Homework 2. For reproducibility, make `chartevents_pq` folder available at the current working directory, for example, by a symbolic link.

```{r}
use charttime
take the average of the value at all storetime 

```
## Q7. Putting things together

Let us create a tibble `mimic_icu_cohort` for all ICU stays, where rows are all ICU stays of adults (age at `intime` >= 18) and columns contain at least following variables

- all variables in `icustays_tble`  
- all variables in `admissions_tble`  
- all variables in `patients_tble`
- the last lab measurements before the ICU stay in `labevents_tble` 
- the first vital measurements during the ICU stay in `chartevents_tble`

The final `mimic_icu_cohort` should have one row per ICU stay and columns for each variable.

![](mimic_icu_cohort.png)

## Q8. Exploratory data analysis (EDA)

Summarize the following information about the ICU stay cohort `mimic_icu_cohort` using appropriate numerics or graphs:

- Length of ICU stay `los` vs demographic variables (race, insurance, marital_status, gender, age at intime)

- Length of ICU stay `los` vs the last available lab measurements before ICU stay

- Length of ICU stay `los` vs the first vital measurements within the ICU stay

- Length of ICU stay `los` vs first ICU unit

